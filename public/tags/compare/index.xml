<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compare on Clouds&amp;Docker</title>
    <link>http://todzhang.com/tags/compare/</link>
    <description>Recent content in compare on Clouds&amp;Docker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://todzhang.com/tags/compare/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compare-In-Java</title>
      <link>http://todzhang.com/posts/2017-01-19-compare-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://todzhang.com/posts/2017-01-19-compare-in-java/</guid>
      <description>Concepts  If you implement Comparable interface and override compareTo() method it must be consistent with equals() method i.e. for equal object by equals() method compareTo() must return zero. failing to so will affect contract of SortedSet e.g. TreeSet and SortedMap like TreeMap, which uses compareTo() method for checking equality Remember to use Collections.reverseOrder() comparator for sorting Object in reverse order or descending order, as shown in this example. Use Generics while implementing Comparator and Comparable interface, that prevents error of accidentally overloading compareTo() and compare() method instead of overriding it because both of these methods accept Object as a parameter.</description>
    </item>
    
  </channel>
</rss>