<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrent on Clouds&amp;Docker</title>
    <link>http://todzhang.com/tags/concurrent/</link>
    <description>Recent content in concurrent on Clouds&amp;Docker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://todzhang.com/tags/concurrent/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java Concurrent Column 2</title>
      <link>http://todzhang.com/posts/2017-02-01-concurrent-in-java-col-2/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://todzhang.com/posts/2017-02-01-concurrent-in-java-col-2/</guid>
      <description>This is the second half about Java Concurrent of my blog non-blocking synchronization  Much of the recent research on concurrent algorithms has focused on nonblock- ing algorithms, which use low-level atomic machine instructions such as compare- and-swap instead of locks to ensure data integrity under concurrent access. Non- blocking algorithms are used extensively in operating systems and JVMs for thread and process scheduling, garbage collection, and to implement locks and other concurrent data structures.</description>
    </item>
    
    <item>
      <title>Java Concurrent</title>
      <link>http://todzhang.com/posts/2017-04-20-concurrent-in-java/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://todzhang.com/posts/2017-04-20-concurrent-in-java/</guid>
      <description>This blog is about noteworthy pivot points about Java Concurrent Framework  Back to Java old days there were wait()/notify() which is error prone, while from Java 5.0 there was Concurrent framework being introduced, this page list some pivot points.
 CountDownLatch  CountDownLatch in Java is a kind of synchronizer which allows one Thread to wait for one or more Threads before starts processing. You can also implement same functionality using wait and notify mechanism in Java but it requires lot of code and getting it write in first attempt is tricky, With CountDownLatch it can be done in just few lines.</description>
    </item>
    
    <item>
      <title>Locking and multithreading</title>
      <link>http://todzhang.com/posts/2018-06-12-locking-and-multithreading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://todzhang.com/posts/2018-06-12-locking-and-multithreading/</guid>
      <description>Single Writer principle There is a lot of research in computer science for managing this contention that boils down to 2 basic approaches. One is to provide mutual exclusion to the contended resource while the mutation takes place; the other is to take an optimistic strategy and swap in the changes if the underlying resource has not changed while you created the new copy.
Memory Barier Memory barriers, or fences, are a set of processor instructions used to apply ordering limitations on memory operations.</description>
    </item>
    
  </channel>
</rss>