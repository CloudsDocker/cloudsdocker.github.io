<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on My New Hugo Site</title>
    <link>http://example.org/tags/dev/</link>
    <description>Recent content in Dev on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algorithm</title>
      <link>http://example.org/posts/2017-01-21-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2017-01-21-algorithm/</guid>
      <description>This page is about key points about Algorithm Methodology  The easiest way to improve search efficiency on a set of data is to put it in a data structure that allows more efficient searching. What data structures can be searched more efficiency than O(n)? Binary tree can be searched in O(log(n)). Arrays and hash tables both have constant time element look up (has tables have worse-case lookup of O(n) but the average case is O(1)).</description>
    </item>
    
  </channel>
</rss>