<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MyBlog on My New Hugo Site</title>
    <link>http://example.org/tags/myblog/</link>
    <description>Recent content in MyBlog on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/tags/myblog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Random number in java</title>
      <link>http://example.org/posts/2016-12-09-headsfirst-randomnumber-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016-12-09-headsfirst-randomnumber-in-java/</guid>
      <description>ThreadLocalRandom, SecureRandm, java.util.Random, java.math.Random
Instances of java.util.Random are threadsafe. However, the concurrent use of the same java.util.Random instance across threads may encounter contention and consequent poor performance. Consider instead using ThreadLocalRandom in multithreaded designs.
The Java Math library function Math.random() generates a double value in the range [0,1). Notice this range does not include the 1.
int rand = ThreadLocalRandom.current().nextInt(x,y); Reference  How to generate a range of random integers in Java Random JavaDoc SecureRandom JavaDoc ThreadLocalRandom JavaDoc Apache Common Math LCG wikipedia Blog about this topic ImportNew  </description>
    </item>
    
    <item>
      <title>漫谈开发设计中的一些‘原则’及&#39;设计哲学&#39;</title>
      <link>http://example.org/posts/2016-09-02-design-principals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016-09-02-design-principals/</guid>
      <description>在开发设计中有一些常用原则或者潜规则，根据笔者的经验，这里稍微总结一下最最常用的，以飨读者。
POLA The principle of least astonishment (POLA) is: &amp;ldquo;If a necessary feature has a high astonishment factor, it may be necessary to redesign the feature.&amp;rdquo;
In general engineering design contexts, the principle means that a component of a system should behave in a way that users expect it to behave; that is, users should not be astonished by its behavior.
A textbook formulation is: &amp;ldquo;People are part of the system.</description>
    </item>
    
  </channel>
</rss>